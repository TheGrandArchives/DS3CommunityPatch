<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Param Patcher"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$lua}
-------------------------------------------------
  function _readInteger(Input)
    local Value = readInteger(Input)
    if Value &lt; 0x80000000 then return Value
    else return Value - 0x100000000 end
  end

  function ParamIndexer()
    MasterParamTable = {}
    local Param = getAddress("ParamPatch")
    local Start = readQword(Param)
    local End = readQword(Param+8)
    local Count = (End-Start)/8
    for i=0,Count-1 do
      local ParamOffset = readQword(Start+i*8)
      local ParamString = "Unknown"
      if readInteger(ParamOffset+0x20) &gt; 7 then
         ParamString = readString(readQword(ParamOffset+0x10),90,true)
      else
         ParamString = readString(ParamOffset+0x10,90,true)
      end
      MasterParamTable[ParamString] = ParamOffset
    end
  end

  function ParamIterator(ParamName,ChangeTable,UUID) --Param Offset is in decimal
    local ParamAddr = readQword(readQword(MasterParamTable[ParamName]+0x68)+0x68)
    local IDTable = {}
    local TableCount = byteTableToWord(readBytes(ParamAddr+0xa,2,true))
    for i=0,TableCount-1 do
      local PID = readInteger(ParamAddr+0x40+0x18*i)
      local IDO = readInteger(ParamAddr+0x48+0x18*i)
      local POffset = ParamAddr+IDO
      IDTable[PID] = POffset
    end
    if UUID ~= nil then --Make a table for backups
      if UnPatcher == nil then UnPatcher = {} end
      UnPatcher[UUID] = {}
      for k,v in pairs(ChangeTable) do
        local Backup = {}
        local _,DataLength = string.gsub(v[3], "%x+","") --Dirty but it works
        Backup[1]=IDTable[v[1]]+v[2]
        Backup[2]=readBytes(Backup[1],DataLength,true)
        table.insert(UnPatcher[UUID],Backup)
        ParamPatcher(IDTable[v[1]],v[2],v[3],v[4])
      end
    else
      for k,v in pairs(ChangeTable) do
        ParamPatcher(IDTable[v[1]],v[2],v[3],v[4])
      end
    end
  end

  function ParamDepatcher(UUID) --yes the name is baddly done
    for k,v in pairs(UnPatcher[UUID]) do
      writeBytes(v[1],v[2])
    end
    UnPatcher[UUID] = nil
  end

  function ParamPatcher(IDOffset,DataOffset,Data,Symbol) --seperated for now in case i need to update something
    local WriteAddr = IDOffset+DataOffset
    local HexTable = {}
    if Symbol == nil then -- basicly if symbol is set, ignore data completely and not write any info
      for word in string.gmatch(Data, "%x+") do table.insert(HexTable,tonumber(word,16)) end
      writeBytes(WriteAddr,HexTable)
    else
      registerSymbol(Symbol,WriteAddr,true)
    end
  end
-------------------------------------------------
  if not syntaxcheck then -- 12.04.2017 for v1.13 fixed by igromanru
  autoAssemble([[
  aobscanmodule(ParamPatchAOB,DarkSoulsIII.exe,48 8B 0D ? ? ? ? 48 85 C9 74 0B 4C 8B C0 48 8B D7)
  registersymbol(ParamPatchAOB)
  ]])

  local addr = getAddress("ParamPatchAOB")
  addr = addr + _readInteger(addr+0x3) + 7
  addr = readQword(addr)+0x10
  unregisterSymbol("ParamPatch")
  registerSymbol("ParamPatch", addr, true)
  ParamIndexer()
  end

{$asm}


[DISABLE]
unregistersymbol(ParamPatch)
unregistersymbol(ParamPatchAOB)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1337036853</ID>
          <Description>"Darkmoon Bow Fix"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
local Weapon = {
      {14130000,0x28,"00 00 8C 42"},
}
local Bullet = {
      {557,0x68,"68 0C D1 00"},
      {13700200,0x0,"88 70 AC 00"},
}

ParamIterator("EquipParamWeapon",Weapon,"DarkmoonBowDefault")
ParamIterator("Bullet",Bullet,"DarkmoonBowWABulletDefault")
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
ParamDepatcher("DarkmoonBowDefault")
ParamDepatcher("DarkmoonBowWABulletDefault")
end
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1337036854</ID>
          <Description>"Washing Pole Fix"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
local Weapon = {
      {5010000,0xC4,"74 00"},
      {5010100,0xC4,"74 00"},
      {5010200,0xC4,"74 00"},
      {5010300,0xC4,"74 00"},
      {5010400,0xC4,"74 00"},
      {5010500,0xC4,"74 00"},
      {5010600,0xC4,"74 00"},
      {5010700,0xC4,"74 00"},
      {5010800,0xC4,"74 00"},
      {5010900,0xC4,"74 00"},
      {5011000,0xC4,"74 00"},
      {5011100,0xC4,"74 00"},
      {5011200,0xC4,"74 00"},
      {5011300,0xC4,"74 00"},
      {5011400,0xC4,"74 00"},
      {5011500,0xC4,"74 00"},
}

ParamIterator("EquipParamWeapon",Weapon,"WashingPoleDefault")
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then

ParamDepatcher("WashingPoleDefault")
end
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
